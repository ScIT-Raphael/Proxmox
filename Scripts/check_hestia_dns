#!/bin/bash

HESTIA_USERS_DIR="/usr/local/hestia/data/users"
DNS_SERVER="1.1.1.1"  # Alternative DNS server for checking resolution
ERRORS=()
declare -g DOMAINS_DNSSEC=()
declare -g ALL_DOMAINS=()

# Function to check DNS resolution
check_dns_resolution() {
    local domain=$1
    local ip=$(dig +short "$domain" @${DNS_SERVER} | head -n 1)

    if [[ -z "$ip" ]]; then
        ERRORS+=("CRITICAL: DNS resolution failed for $domain")
    fi
}

# Function to check DNSSEC with expiration validation
check_dnssec() {
    local domain=$1

    # Retrieve DNSSEC signature data (RRSIG)
    local dnssec_data=$(dig +dnssec "$domain" @1.1.1.1 | grep -E "RRSIG")

    if [[ -z "$dnssec_data" ]]; then
        ERRORS+=("WARNING: DNSSEC is missing or invalid for $domain")
        return
    fi

    # Extract expiration date (column 9 from dig output, UNIX timestamp)
    local expiration_epoch=$(echo "$dnssec_data" | awk '{print $9}')
    if [[ -z "$expiration_epoch" ]]; then
        ERRORS+=("WARNING: DNSSEC signature for $domain has no expiration date (invalid)")
        return
    fi

    # Get current date in UNIX timestamp
    local current_epoch=$(date +%s)

    # Calculate remaining days until expiration
    local remaining_days=$(( (expiration_epoch - current_epoch) / 86400 ))

    if (( remaining_days < 0 )); then
        ERRORS+=("CRITICAL: DNSSEC signature for $domain has expired!")
    elif (( remaining_days < 7 )); then
        ERRORS+=("WARNING: DNSSEC signature for $domain expires in $remaining_days days!")
    fi
}

# Read domains from Hestia DNS configurations, only those with DNSSEC enabled
read_hestia_dns_domains() {
    declare -g DOMAINS_DNSSEC=()
    declare -g ALL_DOMAINS=()

    for dns_conf in "$HESTIA_USERS_DIR"/*/dns.conf; do
        if [[ -f "$dns_conf" ]]; then
            while IFS= read -r line; do
                domain=$(echo "$line" | grep -oP '(?<=DOMAIN=)[^ ]+' | tr -d "'\"")
                dnssec_enabled=$(echo "$line" | grep -oP '(?<=DNSSEC=)[^ ]+' | tr -d "'\"")

                if [[ -n "$domain" ]]; then
                    ALL_DOMAINS+=("$domain")
                    if [[ "$dnssec_enabled" == "yes" ]]; then
                        DOMAINS_DNSSEC+=("$domain")
                    fi
                fi
            done < "$dns_conf"
        fi
    done
}

# Main function
main() {
    read_hestia_dns_domains  # Execute directly, do not capture output

    if [[ ${#ALL_DOMAINS[@]} -eq 0 ]]; then
        echo "OK: No domains found in Hestia DNS"
        exit 0
    fi

    # Check DNS resolution for all domains
    for domain in "${ALL_DOMAINS[@]}"; do
        check_dns_resolution "$domain"
    done

    # Check DNSSEC for enabled domains
    if [[ ${#DOMAINS_DNSSEC[@]} -eq 0 ]]; then
        echo "OK: No domains with active DNSSEC found"
        exit 0
    fi

    for domain in "${DOMAINS_DNSSEC[@]}"; do
        check_dnssec "$domain"
    done

    # Output results
    if [[ ${#ERRORS[@]} -eq 0 ]]; then
        echo "OK: All checks passed, DNS resolution and DNSSEC are valid"
        exit 0
    else
        printf "%s\n" "${ERRORS[@]}"
        exit 2
    fi
}

main
