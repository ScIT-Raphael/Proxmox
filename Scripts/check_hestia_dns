#!/bin/bash

HESTIA_USERS_DIR="/usr/local/hestia/data/users"
DNS_SERVER="1.1.1.1"  # Cloudflare als zuverlässiger DNS-Resolver für DNSSEC
ERRORS=()
declare -g DOMAINS_DNSSEC=()  # Globale Variable für DNSSEC-Domains

# Funktion zur Überprüfung von DNS-Auflösung
check_dns_resolution() {
    local domain=$1
    local ip=$(dig +short "$domain" @${DNS_SERVER} | head -n 1)

    if [[ -z "$ip" ]]; then
        ERRORS+=("CRITICAL: DNS-Auflösung fehlgeschlagen für $domain")
    fi
}

# Funktion zur Überprüfung von DNSSEC mit Ablaufdatum-Check
check_dnssec() {
    local domain=$1

    # Holen der DNSSEC Signaturdaten (RRSIG)
    local dnssec_data=$(dig +dnssec "$domain" @$DNS_SERVER | grep -E "RRSIG")

    if [[ -z "$dnssec_data" ]]; then
        ERRORS+=("WARNING: DNSSEC fehlt oder ist ungültig für $domain")
        return
    fi

    # Ablaufdatum extrahieren (9. Spalte der dig-Ausgabe, UNIX-Zeit)
    local expiration_epoch=$(echo "$dnssec_data" | awk '{print $9}')
    if [[ -z "$expiration_epoch" ]]; then
        ERRORS+=("WARNING: DNSSEC-Signatur für $domain hat kein Ablaufdatum (ungültig)")
        return
    fi

    # Aktuelles Datum in UNIX-Zeit
    local current_epoch=$(date +%s)

    # Berechnen der verbleibenden Tage
    local remaining_days=$(( (expiration_epoch - current_epoch) / 86400 ))

    if (( remaining_days < 0 )); then
        ERRORS+=("CRITICAL: DNSSEC-Signatur für $domain ist abgelaufen!")
    elif (( remaining_days < 7 )); then
        ERRORS+=("WARNING: DNSSEC-Signatur für $domain läuft in $remaining_days Tagen ab!")
    fi
}

# Domains aus Hestia-DNS-Konfigurationen auslesen, nur mit aktivem DNSSEC
read_hestia_dns_domains() {
    local domains=()
    declare -g DOMAINS_DNSSEC=()  # Globale Variable zurücksetzen

    for dns_conf in "$HESTIA_USERS_DIR"/*/dns.conf; do
        if [[ -f "$dns_conf" ]]; then
            while IFS= read -r line; do
                domain=$(echo "$line" | grep -oP '(?<=DOMAIN=)[^ ]+' | tr -d "'\"")
                dnssec_enabled=$(echo "$line" | grep -oP '(?<=DNSSEC=)[^ ]+' | tr -d "'\"")

                if [[ -n "$domain" ]]; then
                    domains+=("$domain")
                    if [[ "$dnssec_enabled" == "yes" ]]; then
                        DOMAINS_DNSSEC+=("$domain")
                    fi
                fi
            done < "$dns_conf"
        fi
    done
}

# Hauptprüfung
main() {
    read_hestia_dns_domains  # Direkt ausführen, keine Rückgabe speichern

    if [[ ${#DOMAINS_DNSSEC[@]} -eq 0 ]]; then
        echo "OK: Keine Domains mit aktivem DNSSEC gefunden"
        exit 0
    fi

    for domain in "${DOMAINS_DNSSEC[@]}"; do
        check_dnssec "$domain"
    done

    if [[ ${#ERRORS[@]} -eq 0 ]]; then
        echo "OK: Alle DNS-Einträge sind erreichbar und DNSSEC ist aktiv & gültig"
        exit 0
    else
        printf "%s\n" "${ERRORS[@]}"
        exit 2
    fi
}

main
