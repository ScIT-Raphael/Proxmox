#!/bin/bash

# Default values
VG_NAME="vg0"
CRIT_THRESHOLD=90
WARN_THRESHOLD=80

# Parse command-line arguments
while getopts "v:c:w:" opt; do
  case ${opt} in
    v ) VG_NAME=$OPTARG ;;
    c ) CRIT_THRESHOLD=$OPTARG ;;
    w ) WARN_THRESHOLD=$OPTARG ;;
    * ) echo "UNKNOWN - Invalid arguments"; exit 3 ;;
  esac
done

# Fetch LVM details
OUTPUT=$(lvs --noheadings --units b --nosuffix -o lv_name,data_percent,metadata_percent,segtype $VG_NAME 2>/dev/null)

if [ -z "$OUTPUT" ]; then
  echo "CRITICAL - No data received from 'lvs'. Is VG_NAME correct?"
  exit 2
fi

HAS_THIN_POOL=0

while read -r LV_NAME DATA_PERCENT META_PERCENT SEGTYPE; do
  # Check if it's a thin-pool
  if [[ "$SEGTYPE" != "thin-pool" ]]; then
    continue
  fi

  HAS_THIN_POOL=1

  # Ensure values are present
  if [[ -z "$DATA_PERCENT" || -z "$META_PERCENT" ]]; then
    echo "CRITICAL - Unexpected 'lvs' output: LV=$LV_NAME | DATA=$DATA_PERCENT | META=$META_PERCENT"
    exit 2
  fi

  # Remove decimal places and validate numeric input
  DATA_PERCENT=${DATA_PERCENT%%.*}
  META_PERCENT=${META_PERCENT%%.*}

  if ! [[ "$DATA_PERCENT" =~ ^[0-9]+$ ]] || ! [[ "$META_PERCENT" =~ ^[0-9]+$ ]]; then
    echo "CRITICAL - Data parsing error: DATA=$DATA_PERCENT, META=$META_PERCENT (not a number)"
    exit 2
  fi

  # Check warning and critical thresholds
  if [ "$DATA_PERCENT" -ge "$CRIT_THRESHOLD" ] || [ "$META_PERCENT" -ge "$CRIT_THRESHOLD" ]; then
    echo "CRITICAL - ThinLVM Pool $LV_NAME: Data ${DATA_PERCENT}%, Metadata ${META_PERCENT}%"
    exit 2
  elif [ "$DATA_PERCENT" -ge "$WARN_THRESHOLD" ] || [ "$META_PERCENT" -ge "$WARN_THRESHOLD" ]; then
    echo "WARNING - ThinLVM Pool $LV_NAME: Data ${DATA_PERCENT}%, Metadata ${META_PERCENT}%"
    exit 1
  fi
done <<< "$OUTPUT"

if [ "$HAS_THIN_POOL" -eq 0 ]; then
  echo "OK - No thin-pools found in VG '$VG_NAME'"
  exit 0
fi

echo "OK - ThinLVM Pools are within normal limits"
exit 0

